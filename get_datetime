# -*- coding: utf-8 -*-
"""
Created on Fri May 31 09:54:54 2024

@author: Aukey
"""

import pandas as pd
from datetime import datetime, date, timedelta
from dateutil.relativedelta import *


# 返回今天日期(字符串格式)
def get_today():
    today = datetime.strftime(date.today(), "%Y-%m-%d")
    return today

# 返回今天日期的前后X的日期(strptime格式)（前为负数，后为正数)
def get_x_date(x,datetype):
    if datetype == 'm':  # 月初日期
        t = date.today()- timedelta(days = date.today().day-1) + relativedelta(months = x) 
    elif datetype == 'w':  # 周一日期
        t = date.today() - timedelta(days = date.today().weekday()) + relativedelta(weeks = x)
    elif datetype == 'ym':  # 月末日期
        t = date.today()- timedelta(days = date.today().day-1) + relativedelta(months = x+1) - timedelta(days =1)
    else :
        t = date.today() + timedelta(days = x)
    return t

# 返回 从开始日期到结束日期之间的日期列表
def datelist(beginDate, endDate):
    # beginDate, endDate是形如‘20160601’的字符串或datetime格式
    date_l=[datetime.strftime(x,'%Y-%m-%d') for x in list(pd.date_range(start=beginDate, end=endDate))]
    return date_l
# 返回 从开始日期到结束日期之间的月初日期列表
def monthlist(beginDate, endDate):
    # beginDate, endDate是形如‘20160601’的字符串或datetime格式
    df_date = pd.DataFrame(data={'date_range':[datetime.strftime(x,'%Y-%m-%d') for x in list(pd.date_range(start=beginDate, end=endDate))]})
    df_date['date_range'] = df_date['date_range'].apply(lambda x : str(x)[:7]+'-01')
    date_l = list(set(df_date['date_range'])) 
    return date_l

# 返回给定日期的所在周的周一日期
def get_week_monday_by_date(date_str):
    now_time = str(date_str)[:10]
    now_time = datetime.strptime(now_time, "%Y-%m-%d")
    week_start_time = now_time - timedelta(days=now_time.weekday()) 
    return week_start_time
# 返回给定日期的所在周的周日日期（周日作为每周第一天)
def get_week_sunday_by_date(date_str):
    now_time = str(date_str)[:10]
    now_time = datetime.strptime(now_time, "%Y-%m-%d")
    week_start_time = now_time - timedelta(days=now_time.weekday()+1) 
    return week_start_time


# 按天查询sql，并合并返回从开始日期到结束日期之间的所有日期的查询结果
def get_sql_by_day(start_date,end_date,data_out_sql,sql):
    dfi = []
    for i in datelist(start_date, end_date):
        sqli = sql.format(j=i)
        dfi.append(data_out_sql(sqli))
    df = pd.concat(dfi)
    df.reset_index(drop=True,inplace=True)
    return df

# 按月查询sql，并合并返回从开始日期到结束日期之间所有月份的查询结果
def get_sql_by_month(start_date,end_date,data_out_sql,sql):
    dfi = []
    for i in monthlist(start_date, end_date):
        sqli = sql.format(j=i)
        dfi.append(data_out_sql(sqli))
    df = pd.concat(dfi)
    df.reset_index(drop=True,inplace=True)
    return df

# 计算工作日时效 （考虑周末、各国法定节假日、补班）
# 输入参数：start_day 开始日期 end_day 结束日期 holidays 自定义假期list extra_work_day 补班日期list
# 输出参数：工作日天数（今天开始明天结束，算一个工作日）
from pandas.tseries.offsets import CustomBusinessDay
def count_businessday(start_day,end_day,holidays,extra_work_day):
    # 自定义假期（各国法定假期）
    b = CustomBusinessDay(holidays=holidays)
    bus_day = pd.date_range(start=start_day,end=end_day, freq=b)
    length = len(bus_day)
    extra_len = 0   
    if len(extra_work_day)>0:
        for i in extra_work_day:
            if i >=start_day and i <=end_day:
                extra_len = extra_len+1
    if length+extra_len==0:
        work_day = length+extra_len
    else:
        work_day = length+extra_len-1
    return work_day

def ad(x):
    return "'"+str(x)+"'"

def get_sql_by_list(list_n,data_out_sql,sql):
    dfi = []
    l =  int(((len(list_n)-1)/300+1)+1)
    for i in range(1,l):
        lisi = list_n[(i-1)*300:i*300]
        sqli = sql.format(j=','.join(map(ad, lisi)))
        dfi.append(data_out_sql(sqli))
    df = pd.concat(dfi)
    df.reset_index(drop=True,inplace=True)
    return df
